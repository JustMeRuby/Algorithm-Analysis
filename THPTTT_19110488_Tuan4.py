# -*- coding: utf-8 -*-
"""PTTT - Lab04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M04qzkoFC-SRRuvJ1T00qiZshCIF59gi
"""

from random import randint
from math import log2
import time
import matplotlib.pyplot as plt

N = [i for i in range(10, 101, 10)]
X = [randint(1, 10 * i) for i in range(1, 11)]

A = list()
S = list()
for n in N:
  array = list()
  for i in range(n):
    x = randint(1, 1000)
    while x in array:
      x = randint(1, 1000)
    array.append(x)
  A.append(sorted(array))
  S.append(array)

def findNum(A, x):
  low = 0
  high = len(A) - 1

  while (low <= high):
    mid = (low + high) // 2
    if A[mid] == x: return mid
    elif A[mid] < x: low = mid + 1
    else: high = mid - 1

  return None

time_1 = list()
for array, x in zip(A, X):
  start_time = time.time()
  print(findNum(array, x))
  time_1.append(time.time() - start_time)

def findMinimum(S, k):
  result = list()
  while len(result) < k:
    min_index = 0
    for i in range(len(S)):
      if S[i] < S[min_index]:
        min_index = i
    result.append(S.pop(min_index))
  return result[-1]

k = 5
time_2 = list()
for array in S:
  start_time = time.time()
  print(findMinimum(array.copy(), k))
  time_2.append(time.time() - start_time)

plt.figure(figsize=(8, 8))

plt.subplot(221)
plt.plot(N, [log2(n) for n in N], label = "log2(N) - Binary Search")
plt.legend()

plt.subplot(222)
plt.plot(N, [k * n for n in N], label = "k * N - K-th Smallest Num")
plt.legend()

plt.subplot(223)
plt.plot(N, time_1, label = "findNum")
plt.legend()

plt.subplot(224)
plt.plot(N, time_2, label = "findMinimum")
plt.legend()

plt.show()