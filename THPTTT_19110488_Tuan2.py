# -*- coding: utf-8 -*-
"""PTTT - Lab02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EGftm3mN2HeDJ-BsVvfMm2a99kg5Nm_X
"""

from random import randint
import numpy as np
import matplotlib.pyplot as plt

x = 50
N = np.arange(10, 1001, 10)

A = list()
for i in N:
  temp_list = list()
  count = 0
  while count < i:
    random = randint(1, 10000)
    while random in temp_list:
      random = randint(1, 10000)
    temp_list.append(random)
    count += 1
  temp_list.sort()
  A.append(temp_list)

time_list = list()
for array in A:
  time = 0
  result = list()
  for i in range(len(array)):
    bot = 0;
    top = len(array) - 1
    while (top >= bot):
      time +=1
      j = int((top + bot) / 2)
      if (array[i] + array[j] == x):
        if (i != j):
          result.append([i, j])
          break
        else: break
      if (array[i] + array[j] < x):
        bot = j + 1;
      if (array[i] + array[j] > x):
        top = j - 1;

  time_list.append(time)
  if (len(result) > 0): print("Result:", result)

# Better Version
better_time_list = list()
for array in A:
  time = 0
  result = list()
  for i in range(len(array)):
    bot = i + 1;
    top = len(array) - 1
    while (top >= bot):
      time +=1
      j = int((top + bot) / 2)
      if (array[i] + array[j] == x):
        result.append([i, j])
        break
      if (array[i] + array[j] < x):
        bot = j + 1;
      if (array[i] + array[j] > x):
        top = j - 1;

  better_time_list.append(time)
  if (len(result) > 0): print("Result:", result)

print(time_list)
print(better_time_list)
complexity = N * np.log2(N)
print(complexity.astype(int).tolist())

plt.figure(figsize=(6, 6))
plt.plot(N, time_list, label = "time_list")
plt.plot(N, better_time_list, label = "better_time_list")
plt.plot(N, complexity, label = "N*log2(N)")
plt.legend()
plt.show()